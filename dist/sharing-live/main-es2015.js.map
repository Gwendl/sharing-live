{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/add-nickname-dialog/add-nickname-dialog.component.html","./src/app/components/add-nickname-dialog/add-nickname-dialog.component.ts","./src/app/components/add-nickname-dialog/add-nickname-dialog.module.ts","./src/app/components/add-stream-dialog/add-stream-dialog.component.html","./src/app/components/add-stream-dialog/add-stream-dialog.component.ts","./src/app/components/add-stream-dialog/add-stream-dialog.module.ts","./src/app/components/conference-buttons/conference-buttons.component.html","./src/app/components/conference-buttons/conference-buttons.component.ts","./src/app/components/conference-buttons/conference-buttons.module.ts","./src/app/components/conference/conference.component.html","./src/app/components/conference/conference.component.ts","./src/app/components/conference/conference.module.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.module.ts","./src/app/components/index.ts","./src/app/components/snack-bar/snack-bar.component.html","./src/app/components/snack-bar/snack-bar.component.ts","./src/app/components/snack-bar/snack-bar.module.ts","./src/app/components/stream-card/stream-card.component.html","./src/app/components/stream-card/stream-card.component.ts","./src/app/components/stream-card/stream-card.module.ts","./src/app/components/utils/string-to-color.ts","./src/app/core/app-routing.module.ts","./src/app/models/form.ts","./src/app/models/guid.ts","./src/app/models/index.ts","./src/app/models/localParticipant.ts","./src/app/models/localStream.ts","./src/app/models/remoteStream.ts","./src/app/models/snackType.ts","./src/app/services/conference.service.ts","./src/app/services/layout.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div [ngClass]=\"[layoutService.screenSize, 'wrapper-root']\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component } from \"@angular/core\";\nimport { LayoutService } from \"./services\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  constructor(public layoutService: LayoutService) {}\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./core/app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport {\n  HomeModule,\n  SnackBarModule,\n  ConferenceModule,\n  SnackBarComponent\n} from \"./components\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HomeModule,\n    SnackBarModule,\n    ConferenceModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [SnackBarComponent]\n})\nexport class AppModule {}\n","<h2>Add your nickname to the videoconference</h2>\r\n<form\r\n  class=\"full-width\"\r\n  [formGroup]=\"formGroup\"\r\n  (ngSubmit)=\"submitNickname(formGroup)\"\r\n>\r\n  <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n    <mat-label>Nickname</mat-label>\r\n    <input matInput [formControl]=\"nicknameControl\" />\r\n    <mat-error>{{ nicknameControl.mainError() }} </mat-error>\r\n  </mat-form-field>\r\n  <div class=\"action-buttons-container\">\r\n    <button mat-button type=\"button\" (click)=\"backToHome()\">\r\n      Back to home page\r\n    </button>\r\n    <button mat-raised-button color=\"primary\" type=\"submit\">\r\n      Join\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validator } from \"src/app/models\";\r\nimport { MatDialogRef } from \"@angular/material\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SnackBarService } from \"src/app/services\";\r\n\r\n@Component({\r\n  selector: \"app-add-nickname-dialog\",\r\n  templateUrl: \"./add-nickname-dialog.component.html\",\r\n  styleUrls: [\"./add-nickname-dialog.component.scss\"]\r\n})\r\nexport class AddNicknameDialogComponent {\r\n  public formGroup: FormGroup;\r\n  public nicknameControl: FormControl;\r\n  constructor(\r\n    private router: Router,\r\n    private dialogRef: MatDialogRef<AddNicknameDialogComponent>,\r\n    private snackbarService: SnackBarService\r\n  ) {\r\n    this.nicknameControl = new FormControl(\r\n      \"\",\r\n      Validator.required(\"This field is required\")\r\n    );\r\n    this.formGroup = new FormGroup({\r\n      nickname: this.nicknameControl\r\n    });\r\n  }\r\n\r\n  public async backToHome(): Promise<void> {\r\n    await this.router.navigate([\"/\"]);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  public submitNickname(form: FormGroup) {\r\n    form.markAllAsTouched();\r\n    if (form.invalid) {\r\n      this.snackbarService.error(\"The form is invalid\");\r\n      return;\r\n    }\r\n    const { nickname } = form.value;\r\n    this.dialogRef.close(nickname);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { AddNicknameDialogComponent } from \"./add-nickname-dialog.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport {\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from \"@angular/material\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [AddNicknameDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class AddNicknameDialogModule {}\r\n","<h2>Add a stream to the videoconference</h2>\r\n<form\r\n  class=\"full-width\"\r\n  [formGroup]=\"formGroup\"\r\n  (ngSubmit)=\"submitAddStream(formGroup)\"\r\n>\r\n  <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n    <mat-label>Video input</mat-label>\r\n    <mat-select [formControl]=\"videoInputControl\">\r\n      <mat-option\r\n        *ngFor=\"let videoDevice of getVideoDevices()\"\r\n        [value]=\"videoDevice.deviceId\"\r\n      >\r\n        {{ videoDevice.label }}\r\n      </mat-option>\r\n    </mat-select>\r\n    <mat-error>{{ videoInputControl.mainError() }}</mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n    <mat-label>Audio input</mat-label>\r\n    <mat-select [formControl]=\"audioInputControl\">\r\n      <mat-option\r\n        *ngFor=\"let audioDevice of getAudioDevices()\"\r\n        [value]=\"audioDevice.deviceId\"\r\n      >\r\n        {{ audioDevice.label }}\r\n      </mat-option>\r\n    </mat-select>\r\n    <mat-error>{{ audioInputControl.mainError() }}</mat-error>\r\n  </mat-form-field>\r\n  <div class=\"action-buttons-container\">\r\n    <button mat-button type=\"button\" (click)=\"close()\">Cancel</button>\r\n    <button mat-raised-button color=\"primary\" type=\"submit\">\r\n      Add stream\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef } from \"@angular/material\";\r\nimport { FormGroup, FormControl, Validator } from \"src/app/models\";\r\nimport { SnackBarService } from \"src/app/services\";\r\n\r\n@Component({\r\n  selector: \"app-add-stream-dialog\",\r\n  templateUrl: \"./add-stream-dialog.component.html\",\r\n  styleUrls: [\"./add-stream-dialog.component.scss\"]\r\n})\r\nexport class AddStreamDialogComponent implements OnInit {\r\n  public formGroup: FormGroup;\r\n  public videoInputControl: FormControl;\r\n  public audioInputControl: FormControl;\r\n  public devices: MediaDeviceInfo[] = [];\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AddStreamDialogComponent>,\r\n    private snackbarService: SnackBarService\r\n  ) {\r\n    this.videoInputControl = new FormControl(\r\n      \"\",\r\n      Validator.required(\"This field is required\")\r\n    );\r\n    this.audioInputControl = new FormControl(\r\n      \"\",\r\n      Validator.required(\"This field is required\")\r\n    );\r\n\r\n    this.formGroup = new FormGroup({\r\n      videoDeviceId: this.videoInputControl,\r\n      audioDeviceId: this.audioInputControl\r\n    });\r\n  }\r\n\r\n  public async ngOnInit(): Promise<void> {\r\n    this.devices = await this.getDevices();\r\n  }\r\n\r\n  private async getDevices(): Promise<MediaDeviceInfo[]> {\r\n    return await navigator.mediaDevices.enumerateDevices();\r\n  }\r\n\r\n  public getVideoDevices(): MediaDeviceInfo[] {\r\n    return this.devices.filter(\r\n      (device: MediaDeviceInfo) => device.kind === \"videoinput\"\r\n    );\r\n  }\r\n\r\n  public getAudioDevices(): MediaDeviceInfo[] {\r\n    return this.devices.filter(\r\n      (device: MediaDeviceInfo) => device.kind === \"audioinput\"\r\n    );\r\n  }\r\n\r\n  public close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  public submitAddStream(form: FormGroup): void {\r\n    form.markAllAsTouched();\r\n    if (form.invalid) {\r\n      this.snackbarService.error(\"The form is invalid\");\r\n      return;\r\n    }\r\n    const { videoDeviceId, audioDeviceId } = form.value;\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: { deviceId: { exact: videoDeviceId } },\r\n        audio: { deviceId: { exact: audioDeviceId } }\r\n      })\r\n      .then(stream => this.dialogRef.close(stream))\r\n      .catch(e => {\r\n        this.dialogRef.close();\r\n        this.snackbarService.error(e.error);\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { AddStreamDialogComponent } from \"./add-stream-dialog.component\";\r\nimport {\r\n  MatFormFieldModule,\r\n  MatButtonModule,\r\n  MatSelectModule\r\n} from \"@angular/material\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n  declarations: [AddStreamDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatSelectModule\r\n  ],\r\n  exports: []\r\n})\r\nexport class AddStreamDialogModule {}\r\n","<div\r\n  class=\"main-buttons\"\r\n  [ngStyle]=\"{\r\n    width: displayedActions ? '400px' : '56px',\r\n    height: displayedActions ? '56px' : '56px'\r\n  }\"\r\n>\r\n  <button\r\n    mat-fab\r\n    class=\"container-buttons\"\r\n    [ngClass]=\"{ active: displayedActions }\"\r\n    [matTooltip]=\"displayedActions ? 'Close menu' : 'Open menu'\"\r\n    (click)=\"triggerActions()\"\r\n  >\r\n    <mat-icon>{{ displayedActions ? \"first_page\" : \"more_horiz\" }}</mat-icon>\r\n  </button>\r\n  <div\r\n    [ngClass]=\"{\r\n      'hide-actions-buttons': !displayedActions,\r\n      'show-actions-buttons': displayedActions\r\n    }\"\r\n  >\r\n    <button\r\n      mat-fab\r\n      class=\"add-icon\"\r\n      (click)=\"addStream()\"\r\n      matTooltip=\"Add a stream\"\r\n    >\r\n      <mat-icon>add_circle</mat-icon>\r\n    </button>\r\n    <button\r\n      mat-fab\r\n      class=\"screen-share-icon\"\r\n      (click)=\"addScreenShare()\"\r\n      matTooltip=\"Add a screen share\"\r\n    >\r\n      <mat-icon>screen_share</mat-icon>\r\n    </button>\r\n    <button\r\n      mat-fab\r\n      color=\"primary\"\r\n      class=\"share-button\"\r\n      matTooltip=\"Copy conference link to the clipboard\"\r\n      (click)=\"copyToClipboardShareLink()\"\r\n    >\r\n      <mat-icon>share</mat-icon>\r\n    </button>\r\n    <button\r\n      mat-fab\r\n      color=\"primary\"\r\n      [ngClass]=\"{ active: !panelVisible }\"\r\n      class=\"clean-button\"\r\n      [matTooltip]=\"panelVisible ? 'Hide streams' : 'Show streams'\"\r\n      (click)=\"triggerVisibility()\"\r\n    >\r\n      <mat-icon>{{ panelVisible ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n    </button>\r\n  </div>\r\n  <button\r\n    mat-fab\r\n    class=\"hang-icon\"\r\n    (click)=\"hangupConference()\"\r\n    matTooltip=\"Leave the conference\"\r\n  >\r\n    <mat-icon>call_end</mat-icon>\r\n  </button>\r\n</div>\r\n","import { Component, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-conference-buttons\",\r\n  templateUrl: \"./conference-buttons.component.html\",\r\n  styleUrls: [\"./conference-buttons.component.scss\"]\r\n})\r\nexport class ConferenceButtonsComponent {\r\n  public displayedActions: boolean = false;\r\n  public panelVisible: boolean = true;\r\n  @Output() public hangupConferenceEmitter: EventEmitter<\r\n    void\r\n  > = new EventEmitter<void>();\r\n\r\n  @Output() public addStreamEmitter: EventEmitter<void> = new EventEmitter<\r\n    void\r\n  >();\r\n\r\n  @Output() public addScreenShareEmitter: EventEmitter<void> = new EventEmitter<\r\n    void\r\n  >();\r\n\r\n  @Output() public copyToClipBoardEmitter: EventEmitter<\r\n    void\r\n  > = new EventEmitter<void>();\r\n\r\n  @Output() public triggerVisibilityEmitter: EventEmitter<\r\n    void\r\n  > = new EventEmitter<void>();\r\n\r\n  public hangupConference(): void {\r\n    this.hangupConferenceEmitter.emit();\r\n  }\r\n\r\n  public addStream(): void {\r\n    this.addStreamEmitter.emit();\r\n  }\r\n\r\n  public addScreenShare(): void {\r\n    this.addScreenShareEmitter.emit();\r\n  }\r\n\r\n  public copyToClipboardShareLink(): void {\r\n    this.copyToClipBoardEmitter.emit();\r\n  }\r\n\r\n  public triggerVisibility(): void {\r\n    this.panelVisible = !this.panelVisible;\r\n    this.triggerVisibilityEmitter.emit();\r\n  }\r\n\r\n  public triggerActions() {\r\n    this.displayedActions = !this.displayedActions;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { ConferenceButtonsComponent } from \"./conference-buttons.component\";\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule\r\n} from \"@angular/material\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n  declarations: [ConferenceButtonsComponent],\r\n  imports: [CommonModule, MatIconModule, MatButtonModule, MatTooltipModule],\r\n  exports: [ConferenceButtonsComponent],\r\n  providers: []\r\n})\r\nexport class ConferenceButtonsModule {}\r\n","<div class=\"conference-container\">\r\n  <div\r\n    class=\"local-streams\"\r\n    [ngClass]=\"{ 'local-stream-invisible': !panelVisibility }\"\r\n  >\r\n    <app-stream-card\r\n      *ngFor=\"let localStream of getLocalStreams()\"\r\n      [inputStream]=\"localStream\"\r\n      [isFocused]=\"isFocused(localStream.stream)\"\r\n      (focusStreamEmitter)=\"focusStream($event)\"\r\n      (closeStreamEmitter)=\"closeLocalStreamConnection($event)\"\r\n      (disableMicEmitter)=\"disableMic($event)\"\r\n      (enableMicEmitter)=\"enableMic($event)\"\r\n    ></app-stream-card>\r\n  </div>\r\n  <div class=\"main-stream\">\r\n    <video\r\n      [srcObject]=\"getMainStream()\"\r\n      autoplay\r\n      playsinline\r\n      [muted]=\"isFocused(getMainStream())\"\r\n      class=\"main-stream-video\"\r\n    ></video>\r\n  </div>\r\n  <div\r\n    class=\"remote-streams\"\r\n    [ngClass]=\"{ 'remote-stream-invisible': !panelVisibility }\"\r\n  >\r\n    <app-stream-card\r\n      *ngFor=\"let remoteStream of getRemoteStreams()\"\r\n      [inputStream]=\"remoteStream\"\r\n      [isFocused]=\"isFocused(remoteStream.stream)\"\r\n      (focusStreamEmitter)=\"focusStream($event)\"\r\n      (closeStreamEmitter)=\"closeRemoteStreamConnection($event)\"\r\n      (disableMicEmitter)=\"disableMic($event)\"\r\n      (enableMicEmitter)=\"enableMic($event)\"\r\n    ></app-stream-card>\r\n  </div>\r\n  <app-conference-buttons\r\n    (hangupConferenceEmitter)=\"hangupConference()\"\r\n    (addStreamEmitter)=\"addStream()\"\r\n    (addScreenShareEmitter)=\"addScreenShare()\"\r\n    (copyToClipBoardEmitter)=\"copyToClipboardShareLink()\"\r\n    (triggerVisibilityEmitter)=\"triggerVisibility()\"\r\n  ></app-conference-buttons>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { ConferenceService } from \"src/app/services/conference.service\";\r\nimport { RemoteStream, LocalStream } from \"src/app/models\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { AddStreamDialogComponent } from \"../add-stream-dialog/add-stream-dialog.component\";\r\nimport { SnackBarService } from \"src/app/services\";\r\nimport { AddNicknameDialogComponent } from \"../add-nickname-dialog/add-nickname-dialog.component\";\r\nimport { ParticipantStream } from \"src/app/models/participant-stream\";\r\n\r\n@Component({\r\n  templateUrl: \"./conference.component.html\",\r\n  styleUrls: [\"./conference.component.scss\"]\r\n})\r\nexport class ConferenceComponent {\r\n  private focusedStream: MediaStream | undefined = undefined;\r\n  public panelVisibility: boolean = true;\r\n  constructor(\r\n    private router: ActivatedRoute,\r\n    private conferenceService: ConferenceService,\r\n    private dialog: MatDialog,\r\n    private snackbarService: SnackBarService\r\n  ) {\r\n    this.initConference();\r\n  }\r\n\r\n  public getMainStream(): MediaStream | undefined {\r\n    if (this.focusedStream) return this.focusedStream;\r\n    const localParticipant = this.conferenceService.getLocalParticipant();\r\n    if (!localParticipant) return;\r\n    const lastRemoteStream = localParticipant.remoteStreams.reverse()[0];\r\n    return (\r\n      (lastRemoteStream && lastRemoteStream.stream) ||\r\n      localParticipant.localStreams.map(ls => ls.stream)[0]\r\n    );\r\n  }\r\n\r\n  public isFocused(stream: MediaStream): boolean {\r\n    if (!this.focusedStream) return false;\r\n    return this.focusedStream === stream;\r\n  }\r\n\r\n  public focusStream(stream: MediaStream): void {\r\n    this.focusedStream = stream;\r\n  }\r\n\r\n  public async initConference(): Promise<void> {\r\n    if (!this.conferenceService.isInConference()) {\r\n      const nickName = await this.openNicknameDialog();\r\n      await this.conferenceService.connect();\r\n      const conferenceId = this.router.snapshot.params.id;\r\n      this.conferenceService.joinConference(conferenceId, nickName);\r\n    }\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        this.conferenceService.addStream(stream);\r\n      });\r\n  }\r\n\r\n  public getLocalStreams(): LocalStream[] {\r\n    if (!this.conferenceService.isInConference()) return [];\r\n    return this.conferenceService.getLocalParticipant().localStreams;\r\n  }\r\n\r\n  public getRemoteStreams(): RemoteStream[] {\r\n    if (!this.conferenceService.isInConference()) return [];\r\n    return this.conferenceService.getLocalParticipant().remoteStreams;\r\n  }\r\n\r\n  public closeLocalStreamConnection(localStreamConnectionId: string): void {\r\n    this.conferenceService.stopLocalStreamConnection(localStreamConnectionId);\r\n  }\r\n\r\n  public closeRemoteStreamConnection(remoteStreamConnectionId: string): void {\r\n    this.conferenceService.stopRemoteStreamConnection(remoteStreamConnectionId);\r\n  }\r\n\r\n  public hangupConference(): void {\r\n    this.conferenceService.disconnect();\r\n  }\r\n\r\n  public enableMic(stream: MediaStream): void {\r\n    // enable microphone\r\n    console.log(\"enable microphone\", stream);\r\n  }\r\n\r\n  public disableMic(stream: MediaStream): void {\r\n    // disable microphone\r\n    console.log(\"disable microphone\", stream);\r\n  }\r\n\r\n  public addStream(): void {\r\n    const dialogRef = this.dialog.open(AddStreamDialogComponent);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) return;\r\n      this.conferenceService.addStream(result);\r\n      this.snackbarService.success(\"Stream added\");\r\n    });\r\n  }\r\n\r\n  public canShareScreen(): boolean {\r\n    // tslint:disable-next-line: no-string-literal\r\n    return navigator.mediaDevices[\"getDisplayMedia\"] !== undefined;\r\n  }\r\n\r\n  public async addScreenShare(): Promise<void> {\r\n    // tslint:disable-next-line: no-string-literal\r\n    const stream = await navigator.mediaDevices[\"getDisplayMedia\"]();\r\n    this.conferenceService.addStream(stream);\r\n  }\r\n\r\n  public async openNicknameDialog(): Promise<string> {\r\n    const dialogRef = this.dialog.open(AddNicknameDialogComponent, {\r\n      disableClose: true\r\n    });\r\n    const nickname = await dialogRef.afterClosed().toPromise();\r\n    if (!nickname) return;\r\n    this.snackbarService.success(`Welcome ${nickname}!`);\r\n    return nickname;\r\n  }\r\n\r\n  public trackByStreamState(\r\n    index: number,\r\n    participant: ParticipantStream\r\n  ): string {\r\n    const stream = participant.stream;\r\n    if (!stream) return undefined;\r\n    return participant.id + stream.active;\r\n  }\r\n\r\n  public async copyToClipboardShareLink(): Promise<void> {\r\n    const shareLink = location.href;\r\n    await navigator.clipboard.writeText(shareLink);\r\n    return this.snackbarService.success(\"Lien copié dans le presse papier\");\r\n  }\r\n\r\n  public triggerVisibility() {\r\n    this.panelVisibility = !this.panelVisibility;\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { ConferenceComponent } from \"./conference.component\";\r\nimport { StreamCardModule } from \"../stream-card/stream-card.module\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ConferenceButtonsModule } from \"../conference-buttons/conference-buttons.module\";\r\nimport { MatDialogModule } from \"@angular/material\";\r\nimport { AddStreamDialogComponent } from \"../add-stream-dialog/add-stream-dialog.component\";\r\nimport { AddStreamDialogModule } from \"../add-stream-dialog/add-stream-dialog.module\";\r\nimport { AddNicknameDialogComponent } from \"../add-nickname-dialog/add-nickname-dialog.component\";\r\nimport { AddNicknameDialogModule } from \"../add-nickname-dialog/add-nickname-dialog.module\";\r\n\r\n@NgModule({\r\n  declarations: [ConferenceComponent],\r\n  imports: [\r\n    CommonModule,\r\n    StreamCardModule,\r\n    ConferenceButtonsModule,\r\n    MatDialogModule,\r\n    AddStreamDialogModule,\r\n    AddNicknameDialogModule\r\n  ],\r\n  entryComponents: [AddStreamDialogComponent, AddNicknameDialogComponent]\r\n})\r\nexport class ConferenceModule {}\r\n","<div class=\"ocean-top\">\r\n  <div class=\"wave-top\"></div>\r\n  <div class=\"wave-top\"></div>\r\n</div>\r\n<div class=\"home-container\">\r\n  <div>\r\n    <h1 class=\"title\">Sharing live</h1>\r\n  </div>\r\n  <div class=\"room-manager\">\r\n    <mat-card class=\"create-room-card\">\r\n      <div class=\"create-room-container\">\r\n        <h2 class=\"text-center\">Create a room</h2>\r\n        <p class=\"text-center\">\r\n          Create a room that can be joined by other\r\n        </p>\r\n        <form\r\n          class=\"full-width\"\r\n          [formGroup]=\"createRoomFormGroup\"\r\n          (ngSubmit)=\"submitCreateRoom(createRoomFormGroup)\"\r\n        >\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Nickname</mat-label>\r\n            <input matInput [formControl]=\"createRoomNickNameControl\" />\r\n            <mat-error>{{ createRoomNickNameControl.mainError() }} </mat-error>\r\n          </mat-form-field>\r\n          <div class=\"text-center\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">\r\n              Create\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </mat-card>\r\n    <mat-card class=\"join-room-card\">\r\n      <div class=\"join-room-container\">\r\n        <h2 class=\"text-center\">Join a room</h2>\r\n        <p class=\"text-center\">\r\n          Join a room already created by someone else\r\n        </p>\r\n        <form\r\n          class=\"full-width\"\r\n          [formGroup]=\"joinRoomFormGroup\"\r\n          (ngSubmit)=\"submitJoinRoom(joinRoomFormGroup)\"\r\n        >\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Room ID</mat-label>\r\n            <input matInput [formControl]=\"roomIdControl\" />\r\n            <mat-error>{{ roomIdControl.mainError() }} </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\r\n            <mat-label>Nickname</mat-label>\r\n            <input matInput [formControl]=\"joinRoomNicknameControl\" />\r\n            <mat-error>{{ joinRoomNicknameControl.mainError() }} </mat-error>\r\n          </mat-form-field>\r\n          <div class=\"text-center\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">\r\n              Join\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"ocean-bottom\">\r\n  <div class=\"wave-bottom\"></div>\r\n  <div class=\"wave-bottom\"></div>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validator } from \"src/app/models\";\r\nimport { SnackBarService } from \"src/app/services\";\r\nimport { ConferenceService } from \"src/app/services\";\r\n\r\n@Component({\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.scss\"]\r\n})\r\nexport class HomeComponent {\r\n  public createRoomFormGroup: FormGroup;\r\n  public createRoomNickNameControl: FormControl;\r\n  public joinRoomFormGroup: FormGroup;\r\n  public roomIdControl: FormControl;\r\n  public joinRoomNicknameControl: FormControl;\r\n  constructor(\r\n    private snackbarService: SnackBarService,\r\n    private conferenceService: ConferenceService\r\n  ) {\r\n    this.createRoomNickNameControl = new FormControl(\r\n      \"\",\r\n      Validator.required(\"Ce champ est requis\")\r\n    );\r\n    this.joinRoomNicknameControl = new FormControl(\r\n      \"\",\r\n      Validator.required(\"Ce champ est requis\")\r\n    );\r\n    this.roomIdControl = new FormControl(\r\n      \"\",\r\n      Validator.required(\"Ce champ est requis\")\r\n    );\r\n    this.createRoomFormGroup = new FormGroup({\r\n      nickname: this.createRoomNickNameControl\r\n    });\r\n    this.joinRoomFormGroup = new FormGroup({\r\n      roomId: this.roomIdControl,\r\n      nickname: this.joinRoomNicknameControl\r\n    });\r\n  }\r\n\r\n  public submitCreateRoom(form: FormGroup) {\r\n    form.markAllAsTouched();\r\n    if (form.invalid) {\r\n      this.snackbarService.error(\"Le formulaire est invalide\");\r\n      return;\r\n    }\r\n    const { nickname } = form.value;\r\n    this.conferenceService\r\n      .connect()\r\n      .then(() => this.conferenceService.createConference(nickname));\r\n  }\r\n\r\n  public submitJoinRoom(form: FormGroup) {\r\n    form.markAllAsTouched();\r\n    if (form.invalid) {\r\n      this.snackbarService.error(\"Le formulaire est invalide\");\r\n      return;\r\n    }\r\n    const { roomId, nickname } = form.value;\r\n    this.conferenceService\r\n      .connect()\r\n      .then(() => this.conferenceService.joinConference(roomId, nickname));\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { HomeComponent } from \"./home.component\";\r\nimport {\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatExpansionModule\r\n} from \"@angular/material\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [HomeComponent],\r\n  imports: [\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatExpansionModule\r\n  ]\r\n})\r\nexport class HomeModule {}\r\n","export * from \"./home/home.component\";\r\nexport * from \"./home/home.module\";\r\nexport * from \"./snack-bar/snack-bar.component\";\r\nexport * from \"./snack-bar/snack-bar.module\";\r\nexport * from \"./conference/conference.component\";\r\nexport * from \"./conference/conference.module\";\r\nexport * from \"./stream-card/stream-card.component\";\r\nexport * from \"./stream-card/stream-card.module\";\r\n","<span class=\"message\"> {{ message }} </span>\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport { MAT_SNACK_BAR_DATA } from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: \"app-snack-bar\",\r\n  templateUrl: \"./snack-bar.component.html\",\r\n  styleUrls: [\"./snack-bar.component.scss\"]\r\n})\r\nexport class SnackBarComponent {\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public message: string) {}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { SnackBarComponent } from \"./snack-bar.component\";\r\nimport { MatSnackBarModule } from \"@angular/material\";\r\nimport { SnackBarService } from \"src/app/services\";\r\n\r\n@NgModule({\r\n  declarations: [SnackBarComponent],\r\n  providers: [SnackBarService],\r\n  imports: [MatSnackBarModule]\r\n})\r\nexport class SnackBarModule {}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <mat-icon *ngIf=\"isFocused\" class=\"icon-focused-stream\"\r\n      >remove_red_eye</mat-icon\r\n    >\r\n    <video\r\n      (click)=\"focusVideo()\"\r\n      autoplay\r\n      playsinline\r\n      [srcObject]=\"inputStream.stream\"\r\n      class=\"video\"\r\n      [ngStyle]=\"{\r\n        'border-bottom': '5px solid' + stringToColor(inputStream.nickname)\r\n      }\"\r\n    ></video>\r\n    <div class=\"button-actions\">\r\n      <button\r\n        class=\"mic-icon\"\r\n        mat-icon-button\r\n        (click)=\"toogleMic()\"\r\n        [ngClass]=\"{ muted: micMuted }\"\r\n        [matTooltip]=\"micMuted ? 'Enable microphone' : 'Disable microphone'\"\r\n      >\r\n        <mat-icon>{{ micMuted ? \"mic_off\" : \"mic_on\" }}</mat-icon>\r\n      </button>\r\n      <button\r\n        class=\"close-icon\"\r\n        mat-icon-button\r\n        (click)=\"closeStream()\"\r\n        matTooltip=\"Close stream\"\r\n      >\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { RemoteStream, LocalStream } from \"src/app/models\";\r\nimport { stringToRGBColor } from \"../utils/string-to-color\";\r\n\r\n@Component({\r\n  selector: \"app-stream-card\",\r\n  templateUrl: \"./stream-card.component.html\",\r\n  styleUrls: [\"./stream-card.component.scss\"]\r\n})\r\nexport class StreamCardComponent {\r\n  @Input()\r\n  public inputStream: LocalStream & RemoteStream;\r\n  @Input() public isFocused: boolean;\r\n  @Output() public enableMicEmitter: EventEmitter<\r\n    MediaStream\r\n  > = new EventEmitter<MediaStream>();\r\n  @Output() public disableMicEmitter: EventEmitter<\r\n    MediaStream\r\n  > = new EventEmitter<MediaStream>();\r\n  @Output() public closeStreamEmitter: EventEmitter<string> = new EventEmitter<\r\n    string\r\n  >();\r\n  @Output() public focusStreamEmitter: EventEmitter<\r\n    MediaStream\r\n  > = new EventEmitter<MediaStream>();\r\n  public micMuted: boolean;\r\n\r\n  public toogleMic(): void {\r\n    this.micMuted\r\n      ? this.enableMicEmitter.emit(this.inputStream.stream)\r\n      : this.disableMicEmitter.emit(this.inputStream.stream);\r\n    this.micMuted = !this.micMuted;\r\n  }\r\n\r\n  public closeStream(): void {\r\n    this.closeStreamEmitter.emit(this.inputStream.id);\r\n  }\r\n\r\n  public focusVideo(): void {\r\n    this.focusStreamEmitter.emit(this.inputStream.stream);\r\n  }\r\n\r\n  public stringToColor(nickname: string): string {\r\n    return stringToRGBColor(nickname);\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { StreamCardComponent } from \"./stream-card.component\";\r\nimport {\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatTooltipModule\r\n} from \"@angular/material\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n  declarations: [StreamCardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [StreamCardComponent]\r\n})\r\nexport class StreamCardModule {}\r\n","export function stringToRGBColor(nickname: string): string {\r\n  if (!nickname) return \"#ffffff\";\r\n  let hash = 0;\r\n  for (let i = 0; i < nickname.length; i++) {\r\n    // tslint:disable-next-line: no-bitwise\r\n    hash = nickname.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  // tslint:disable-next-line: no-bitwise\r\n  const c = (hash & 0x00ffffff).toString(16).toUpperCase();\r\n  const hex = \"00000\".substring(0, 6 - c.length) + c;\r\n  return `#${hex}`;\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomeComponent, ConferenceComponent } from \"../components\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  { path: \"conference/:id\", component: ConferenceComponent },\n  { path: \"**\", redirectTo: \"\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import {\r\n  FormControl as AngularFormControl,\r\n  FormGroup as AngularFormGroup,\r\n  FormArray as AngularFormArray,\r\n  Validators as AngularValidators,\r\n  ValidatorFn,\r\n  AbstractControl,\r\n  ValidationErrors\r\n} from \"@angular/forms\";\r\n\r\nexport class FormGroup extends AngularFormGroup {\r\n  public getControls() {\r\n    return this.controls as { [key: string]: FormControl };\r\n  }\r\n\r\n  public getControl<T extends AbstractControl>(\r\n    path: string | (string | number)[]\r\n  ): T {\r\n    return this.get(path) as T;\r\n  }\r\n\r\n  public mainError(): string {\r\n    const controls = Object.values(this.getControls());\r\n    return controls.find(c => c.invalid).mainError();\r\n  }\r\n}\r\n\r\nexport class FormArray extends AngularFormArray {\r\n  public getControls() {\r\n    return this.controls as FormControl[];\r\n  }\r\n  public mainError(): string {\r\n    return this.getControls()\r\n      .find(c => c.invalid)\r\n      .mainError();\r\n  }\r\n}\r\n\r\nexport class FormControl extends AngularFormControl {\r\n  private validators: Validator[];\r\n\r\n  constructor(formState?: any, ...validators: Validator[]) {\r\n    super(\r\n      formState,\r\n      validators.map(v => v.validator)\r\n    );\r\n    this.validators = validators;\r\n  }\r\n\r\n  public displayError(): boolean {\r\n    return this.invalid && this.touched;\r\n  }\r\n\r\n  public mainError(): string {\r\n    if (!this.displayError()) return undefined;\r\n    const [key, value] = Object.entries(this.errors)[0];\r\n    const validatorError = this.validators.find(v => v.type === key);\r\n    return validatorError.error;\r\n  }\r\n}\r\n\r\nexport class Validator {\r\n  constructor(\r\n    public validator: ValidatorFn,\r\n    public type: string,\r\n    public error: string\r\n  ) {}\r\n\r\n  public static requiredTrue(\r\n    error: string = \"You must check this value\"\r\n  ): Validator {\r\n    return new Validator(AngularValidators.requiredTrue, \"required\", error);\r\n  }\r\n\r\n  public static email(\r\n    error: string = \"This mail address is invalid\"\r\n  ): Validator {\r\n    return new Validator(AngularValidators.email, \"email\", error);\r\n  }\r\n\r\n  public static valuesEquals(\r\n    controls: AbstractControl[],\r\n    error: string = \"Confirmation password not match\"\r\n  ): Validator {\r\n    return new Validator(\r\n      (control: AbstractControl): ValidationErrors => {\r\n        const differentsControls = controls.filter(\r\n          c => c.value !== control.value\r\n        );\r\n        if (differentsControls.length === 0) return null;\r\n        return { equals: \"All values are not equals\" };\r\n      },\r\n      \"equals\",\r\n      error\r\n    );\r\n  }\r\n\r\n  public static required(\r\n    error: string = \"This value need to be set\"\r\n  ): Validator {\r\n    return new Validator(AngularValidators.required, \"required\", error);\r\n  }\r\n\r\n  public static minLength(length: number, error?: string): Validator {\r\n    error =\r\n      error || \"this value need to be upper than \" + length + \" character(s).\";\r\n    return new Validator(\r\n      AngularValidators.minLength(length),\r\n      \"minlength\",\r\n      error\r\n    );\r\n  }\r\n  public static lengthEqual(length: number, error?: string): Validator {\r\n    error =\r\n      error || \"this value need to equal than \" + length + \" character(s).\";\r\n    return (\r\n      new Validator(AngularValidators.maxLength(length), \"maxlength\", error) &&\r\n      new Validator(AngularValidators.minLength(length), \"minlength\", error)\r\n    );\r\n  }\r\n  public static maxLength(length: number, error?: string): Validator {\r\n    error =\r\n      error || \"this value need to be lower than \" + length + \" character(s).\";\r\n    return new Validator(\r\n      AngularValidators.maxLength(length),\r\n      \"maxlength\",\r\n      error\r\n    );\r\n  }\r\n\r\n  public static pattern(regex: RegExp, error?: string): Validator {\r\n    error = error || \"Wrong value\";\r\n    return new Validator(AngularValidators.pattern(regex), \"pattern\", error);\r\n  }\r\n\r\n  public static validateCCNumber(error?: string): Validator {\r\n    error = error || \"The expiration date not match\";\r\n    return this.pattern(/^\\d{4}\\d{4}\\d{4}\\d{4}$/, error);\r\n  }\r\n\r\n  public static expirationDate(error?: string): Validator {\r\n    error = error || \"The expiration date not match\";\r\n    return this.pattern(/^\\d{2}[2]{1}\\d{1}[0-9]{2}$/, error);\r\n  }\r\n\r\n  public static phone(error?: string): Validator {\r\n    error = error || \"The phone number is invalid\";\r\n    return this.pattern(/[1-9](\\d){8}$/, error);\r\n  }\r\n\r\n  public static mobilePhone(error?: string): Validator {\r\n    error = error || \"The phone number is invalid\";\r\n    return this.pattern(/(^6|7)(\\d){8}$/, error);\r\n  }\r\n}\r\n","export default function uuidv4(): string {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n    const r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n","export * from \"./form\";\r\nexport * from \"./snackType\";\r\nexport * from \"./participant\";\r\nexport * from \"./remoteStream\";\r\nexport * from \"./guid\";\r\nexport * from \"./localParticipant\";\r\nexport * from \"./localStream\";\r\n","import { LocalStream } from \"./localStream\";\r\nimport { RemoteStream } from \"./remoteStream\";\r\nimport { Participant } from \"./participant\";\r\nimport { RTCConnection } from \"light-rtc\";\r\n\r\nexport class LocalParticipant implements Participant {\r\n  public localStreams: LocalStream[];\r\n  public nickname: string;\r\n  public muted: boolean;\r\n  public screenSharingEnabled: boolean;\r\n  public remoteStreams: RemoteStream[];\r\n\r\n  constructor(nickName: string) {\r\n    this.nickname = nickName;\r\n    this.localStreams = [];\r\n    this.remoteStreams = [];\r\n    this.screenSharingEnabled = false;\r\n    this.muted = false;\r\n  }\r\n\r\n  public addLocalStreamConnection(\r\n    localStreamId: string,\r\n    nickName: string,\r\n    connection: RTCConnection\r\n  ): void {\r\n    const localStream = this.localStreams.find(ls => ls.id === localStreamId);\r\n    const connectionInfos = localStream.addConnection(nickName, connection);\r\n    const peer = connection.getPeer();\r\n    peer.addEventListener(\"iceconnectionstatechange\", state => {\r\n      if (peer.iceConnectionState !== \"disconnected\") return;\r\n      localStream.connections = localStream.connections.filter(\r\n        c => c !== connectionInfos\r\n      );\r\n      peer.close();\r\n    });\r\n  }\r\n\r\n  public addRemoteStreamConnection(\r\n    nickName: string,\r\n    connectionId: string,\r\n    connection: RTCConnection\r\n  ): RemoteStream {\r\n    const remoteStream = new RemoteStream(nickName, connectionId, connection);\r\n    this.remoteStreams.push(remoteStream);\r\n    const peer = connection.getPeer();\r\n    peer.addEventListener(\"iceconnectionstatechange\", state => {\r\n      if (peer.iceConnectionState !== \"disconnected\") return;\r\n      this.stopRemoteStream(connectionId);\r\n    });\r\n    return remoteStream;\r\n  }\r\n\r\n  public stopLocalStream(localStreamId: string): void {\r\n    const localStream = this.localStreams.find(ls => ls.id === localStreamId);\r\n    if (!localStream) return;\r\n    this.localStreams = this.localStreams.filter(ls => ls !== localStream);\r\n    localStream.stop();\r\n  }\r\n\r\n  public stopLocalStreamFor(localStreamId: string, nickName: string): void {\r\n    const localStream = this.localStreams.find(ls => ls.id === localStreamId);\r\n    if (!localStream) return;\r\n    localStream.stopConnection(nickName);\r\n    if (!localStream.hasConnection()) this.stopLocalStream(localStreamId);\r\n  }\r\n\r\n  public stopRemoteStream(connectionId: string): void {\r\n    const remoteStream = this.remoteStreams.find(rs => rs.id === connectionId);\r\n    if (!remoteStream) return;\r\n    remoteStream.stop();\r\n    this.remoteStreams = this.remoteStreams.filter(rs => rs !== remoteStream);\r\n  }\r\n}\r\n","import { RTCConnection } from \"light-rtc\";\r\nimport guid from \"./guid\";\r\nimport { ParticipantConnection } from \"./participantConnection\";\r\nimport { ParticipantStream } from \"./participant-stream\";\r\n\r\nexport class LocalStream implements ParticipantStream {\r\n  public stream: MediaStream;\r\n  public id: string;\r\n  public connections: ParticipantConnection[];\r\n\r\n  constructor(stream: MediaStream) {\r\n    this.id = guid();\r\n    this.connections = [];\r\n    this.stream = stream;\r\n  }\r\n\r\n  public addConnection(\r\n    nickname: string,\r\n    connection: RTCConnection\r\n  ): ParticipantConnection {\r\n    const connectionInfos = {\r\n      nickname,\r\n      id: this.id,\r\n      connection\r\n    };\r\n    this.connections.push(connectionInfos);\r\n    connection.getPeer().addEventListener(\"iceconnectionstatechange\", () => {\r\n      if (connection.getPeer().iceConnectionState !== \"disconnected\") return;\r\n      this.stopConnection(nickname);\r\n    });\r\n    return connectionInfos;\r\n  }\r\n\r\n  public stopConnection(nickName: string): void {\r\n    const participantConnection = this.connections.find(\r\n      pc => pc.nickname === nickName\r\n    );\r\n    if (!participantConnection) return;\r\n    participantConnection.connection.getPeer().close();\r\n    this.connections = this.connections.filter(\r\n      pc => pc !== participantConnection\r\n    );\r\n  }\r\n\r\n  public stop(): void {\r\n    this.stream.getTracks().forEach(t => t.stop());\r\n    this.connections.forEach(c => this.stopConnection(c.nickname));\r\n  }\r\n\r\n  public hasConnection(): boolean {\r\n    return this.connections.length > 0;\r\n  }\r\n}\r\n","import { RTCConnection } from \"light-rtc\";\r\nimport { ParticipantConnection } from \"./participantConnection\";\r\nimport { ParticipantStream } from \"./participant-stream\";\r\n\r\nexport class RemoteStream implements ParticipantConnection, ParticipantStream {\r\n  public stream: MediaStream;\r\n  public nickname: string;\r\n  public id: string;\r\n  public connection: RTCConnection;\r\n\r\n  public constructor(\r\n    sourceNickname: string,\r\n    id: string,\r\n    connection: RTCConnection\r\n  ) {\r\n    this.id = id;\r\n    this.nickname = sourceNickname;\r\n    this.connection = connection;\r\n    connection.onStream(s => (this.stream = s));\r\n  }\r\n\r\n  public stop(): void {\r\n    this.connection.getPeer().close();\r\n    if (this.stream) this.stream.getTracks().forEach(t => t.stop());\r\n  }\r\n}\r\n","export enum SnackType {\r\n  ERROR = \"error\",\r\n  SUCCESS = \"success\"\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Participant } from \"src/app/models/participant\";\r\nimport { Router } from \"@angular/router\";\r\nimport * as socketIo from \"socket.io-client\";\r\nimport {\r\n  RTCInformation,\r\n  RTCInitiator,\r\n  RTCConnection,\r\n  RTCReceiver\r\n} from \"light-rtc\";\r\nimport { LocalParticipant, LocalStream, RemoteStream } from \"../models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ParticipantConnection } from \"../models/participantConnection\";\r\nimport { flatten } from \"lodash\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ConferenceService {\r\n  private participants: Participant[];\r\n  private socketIo: SocketIOClient.Socket;\r\n  private localParticipant: LocalParticipant;\r\n\r\n  constructor(private router: Router) {\r\n    this.clean();\r\n  }\r\n\r\n  public getLocalParticipant(): LocalParticipant {\r\n    return this.localParticipant;\r\n  }\r\n\r\n  public async connect(): Promise<void> {\r\n    if (this.socketIo && this.socketIo.connected) this.socketIo.close();\r\n    this.clean();\r\n    this.socketIo = await this.createConnection();\r\n    this.socketIo.on(\"disconnect\", () => {\r\n      this.clean();\r\n      this.router.navigate([\"home\"]);\r\n    });\r\n    this.subscribeEvents(this.socketIo);\r\n  }\r\n\r\n  private clean(): void {\r\n    this.participants = [];\r\n    if (!this.localParticipant) return;\r\n    this.localParticipant.localStreams.forEach(ls => ls.stop());\r\n    this.localParticipant.remoteStreams.forEach(rs => rs.stop());\r\n    this.localParticipant = undefined;\r\n  }\r\n\r\n  public disconnect(): void {\r\n    this.socketIo.disconnect();\r\n  }\r\n\r\n  private createConnection(): Promise<SocketIOClient.Socket> {\r\n    return new Promise((res, rej) => {\r\n      const socket = socketIo(environment.serverUrl, {\r\n        reconnection: false\r\n      });\r\n      socket.once(\"connect\", () => res(socket));\r\n      socket.on(\"disconnect\", rej);\r\n    });\r\n  }\r\n\r\n  private subscribeEvents(socketIoClient: SocketIOClient.Socket): void {\r\n    socketIoClient.on(\"participantJoined\", (nickname: string) => {\r\n      this.onParticipantJoined(nickname);\r\n    });\r\n    socketIoClient.on(\"participantLeft\", (nickname: string) => {\r\n      this.onParticipantLeft(nickname);\r\n    });\r\n    socketIoClient.on(\r\n      \"conferenceJoined\",\r\n      (conferenceId: string, nickname: string, participants: string[]) =>\r\n        this.onConferenceJoined(conferenceId, nickname, participants)\r\n    );\r\n    socketIoClient.on(\r\n      \"rtcHandshake\",\r\n      (nickname: string, peerId: string, rtcInfos: RTCInformation) =>\r\n        this.onRTCHandshake(nickname, peerId, rtcInfos)\r\n    );\r\n  }\r\n\r\n  public onConferenceJoined(\r\n    conferenceId: string,\r\n    nickname: string,\r\n    participants: string[]\r\n  ): void {\r\n    this.localParticipant = new LocalParticipant(nickname);\r\n    this.participants = participants.map(name => ({\r\n      nickname: name\r\n    }));\r\n    this.router.navigate([\"conference\", conferenceId]);\r\n  }\r\n\r\n  public joinConference(conferenceId: string, nickname: string): void {\r\n    this.socketIo.emit(\"joinConference\", conferenceId, nickname);\r\n  }\r\n\r\n  public createConference(nickname: string): void {\r\n    this.socketIo.emit(\"createConference\", nickname);\r\n  }\r\n\r\n  public async onParticipantJoined(nickname: string): Promise<void> {\r\n    this.participants.push({\r\n      nickname\r\n    });\r\n    this.localParticipant.localStreams.forEach(localStream => {\r\n      const connection = this.sendStream(localStream, nickname);\r\n    });\r\n  }\r\n\r\n  private sendStream(\r\n    localStream: LocalStream,\r\n    nickname: string\r\n  ): RTCConnection {\r\n    const connection = new RTCInitiator(localStream.stream, infos => {\r\n      this.sendRTCHandshake(nickname, localStream.id, infos);\r\n    });\r\n    localStream.addConnection(nickname, connection);\r\n    return connection;\r\n  }\r\n\r\n  public sendRTCHandshake(\r\n    nickname: string,\r\n    peerId: string,\r\n    rtcInfos: RTCInformation\r\n  ): void {\r\n    this.socketIo.emit(\"rtcHandshake\", nickname, peerId, rtcInfos);\r\n  }\r\n\r\n  public onRTCHandshake(\r\n    nickname: string,\r\n    peerId: string,\r\n    rtcInfos: RTCInformation\r\n  ): void {\r\n    const connections = this.getPeerConnections();\r\n    const participantConnection =\r\n      connections.find(c => c.nickname === nickname && c.id === peerId) ||\r\n      this.createReceiver(nickname, peerId);\r\n    participantConnection.connection.addInformations(rtcInfos);\r\n  }\r\n\r\n  private createReceiver(nickname: string, peerId: string): RemoteStream {\r\n    const rtcConnection = new RTCReceiver(undefined, infos => {\r\n      this.sendRTCHandshake(nickname, peerId, infos);\r\n    });\r\n    return this.localParticipant.addRemoteStreamConnection(\r\n      nickname,\r\n      peerId,\r\n      rtcConnection\r\n    );\r\n  }\r\n\r\n  private getPeerConnections(): ParticipantConnection[] {\r\n    const localStreams = this.localParticipant.localStreams;\r\n    const localStreamConnections = flatten(\r\n      localStreams.map(streams => streams.connections)\r\n    );\r\n    return localStreamConnections.concat(this.localParticipant.remoteStreams);\r\n  }\r\n\r\n  public addStream(stream: MediaStream): void {\r\n    const localStream = new LocalStream(stream);\r\n    this.participants.forEach(p => {\r\n      this.sendStream(localStream, p.nickname);\r\n    });\r\n    this.localParticipant.localStreams.push(localStream);\r\n  }\r\n\r\n  public stopLocalStreamConnection(id: string): void {\r\n    const localStreamConnection = this.localParticipant.localStreams.find(\r\n      ls => ls.id === id\r\n    );\r\n    localStreamConnection.stop();\r\n    this.localParticipant.localStreams = this.localParticipant.localStreams.filter(\r\n      ls => ls !== localStreamConnection\r\n    );\r\n  }\r\n\r\n  public stopRemoteStreamConnection(id: string): void {\r\n    const remoteStreamConnection = this.localParticipant.remoteStreams.find(\r\n      rs => rs.id === id\r\n    );\r\n    remoteStreamConnection.stop();\r\n    this.localParticipant.remoteStreams = this.localParticipant.remoteStreams.filter(\r\n      rs => rs !== remoteStreamConnection\r\n    );\r\n  }\r\n\r\n  public onParticipantLeft(nickname: string): void {\r\n    this.localParticipant.remoteStreams = this.localParticipant.remoteStreams.filter(\r\n      rs => rs.nickname !== nickname\r\n    );\r\n    this.participants = this.participants.filter(p => p.nickname !== nickname);\r\n  }\r\n\r\n  public isInConference(): boolean {\r\n    return this.localParticipant !== undefined;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\n\r\nexport enum ScreenSize {\r\n  MOBILE = \"mobile\",\r\n  TABLET = \"tablet\",\r\n  WEB = \"web\"\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class LayoutService {\r\n  public screenSize: ScreenSize = ScreenSize.WEB;\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {\r\n    this.updateLayoutType();\r\n    this.breakpointObserver\r\n      .observe([Breakpoints.Small, Breakpoints.Medium, Breakpoints.Large])\r\n      .subscribe(res => {\r\n        this.updateLayoutType();\r\n      });\r\n  }\r\n\r\n  private updateLayoutType(): void {\r\n    if (\r\n      this.breakpointObserver.isMatched([Breakpoints.Small, Breakpoints.XSmall])\r\n    )\r\n      this.screenSize = ScreenSize.MOBILE;\r\n    if (this.breakpointObserver.isMatched([Breakpoints.Medium]))\r\n      this.screenSize = ScreenSize.TABLET;\r\n    if (\r\n      this.breakpointObserver.isMatched([Breakpoints.Large, Breakpoints.XLarge])\r\n    )\r\n      this.screenSize = ScreenSize.WEB;\r\n  }\r\n\r\n  public isMobile(): boolean {\r\n    return this.screenSize === ScreenSize.MOBILE;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { SnackType } from \"src/app/models\";\r\nimport { SnackBarComponent } from \"../components/snack-bar/snack-bar.component\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class SnackBarService {\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  public success(message: string, duration: number = 5000): void {\r\n    this.create(message, SnackType.SUCCESS, duration);\r\n  }\r\n\r\n  public error(message: string, duration: number = 5000): void {\r\n    this.create(message, SnackType.ERROR, duration);\r\n  }\r\n\r\n  private create(message: string, type: SnackType, duration: number): void {\r\n    this.snackBar.openFromComponent(SnackBarComponent, {\r\n      duration,\r\n      verticalPosition: \"top\",\r\n      data: message || \"Undefined message\",\r\n      panelClass: [`wrapper-snackbar-${type}`, type]\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  serverUrl: \"https://screen-sharing-server.herokuapp.com\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import \"zone.js/dist/zone-error\"; // Included with Angular CLI.\r\n","import \"hammerjs\";\nimport { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}